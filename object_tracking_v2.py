# -*- coding: utf-8 -*-
"""Object Tracking_v2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19fjFlA9ZtxOztqYLCm3qK2pGTRlgbm0B

* I need to push all the ""ëxisting points tracked"" that AREN"T UPDATED into a "historic tracked points dictionary"
 *Also need to incrementally update new coordinates
"""

from scipy import spatial
#EPt = Existing Point Tracked
EPt = {0: [1, 5], 1: [2, 6], 2: [3, 7], 3: [4, 8], 4: [5, 9], 5: [6, 10], 6: [7, 11]}
type(EPt)

#return the values 
#https://stackoverflow.com/questions/16228248/how-can-i-get-list-of-values-from-dict
EPtl = [*EPt.values()]
type(EPt)

EPt

# Npt = Current Bounding Boxes
Npt = [[4,8.1],[1.5,5.1]]
type(Npt)

n=0
for i in Npt:
  print("This new point: ",Npt[n],"is closest to this existing point:", EPtl[spatial.KDTree(EPtl).query(i)[1]])
  distance,index = spatial.KDTree(EPtl).query(i)
  print("The distance between the two points is ", distance, "and the index of the closest pt is ",index,)
#I need to update Ept coordinates with Npt. I have a simple example below
  #here is the value to used in the dictionary update statement
  updatedCoordinate = {index: Npt[n]}
  type(updatedCoordinate)
  EPt.update(updatedCoordinate)
  #print("EPt ïs type: ", )
 # print(type(EPt))
#  "note I need EPt to be dictionary to run the update logic: EPt.update(updatedCoordinate).
#  print(EPt)
  print("  ")
  n=n+1
  
print("This is the dictionary with pts from the latest bounding box")  
print(EPt)

#updating a dictionary
#Note the Key is used to do the matching
d = {1: "one", 2: "three"}
d1 = {2: "two"}

# updates the value of key 2
d.update(d1)
print(d)

d1 = {3: "three"}

# adds element with key 3
d.update(d1)
print(d)

#list(EPt)

#EPt.keys()